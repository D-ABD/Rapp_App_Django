# Generated by Django 4.2.7 on 2025-03-08 08:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('rap_app', '0002_alter_recherche_terme_recherche'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('nom', models.CharField(max_length=255, unique=True, verbose_name="Nom de l'entreprise")),
                ('secteur_activite', models.CharField(blank=True, max_length=255, null=True, verbose_name="Secteur d'activité")),
                ('contact_nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nom du contact')),
                ('contact_poste', models.CharField(blank=True, max_length=255, null=True, verbose_name='Poste du contact')),
                ('contact_telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone du contact')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email du contact')),
                ('description', models.TextField(blank=True, null=True, verbose_name="Description de l'entreprise")),
                ('est_active', models.BooleanField(default=True, verbose_name='Entreprise active')),
                ('est_visible_dans_formation', models.BooleanField(default=False, verbose_name='Visible dans la formation')),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
                'ordering': ['nom'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='type_document',
            field=models.CharField(choices=[('pdf', 'PDF'), ('image', 'Image'), ('contrat', 'Contrat signé'), ('autre', 'Autre')], default='autre', max_length=20, verbose_name='Type de document'),
        ),
        migrations.AddField(
            model_name='ressource',
            name='type_ressource',
            field=models.CharField(choices=[('evenement', 'Événement'), ('entreprise', 'Entreprise'), ('autre', 'Autre')], default='autre', max_length=50, verbose_name='Type de ressource'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='code_postal',
            field=models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='Le code postal doit contenir exactement 5 chiffres', regex='^\\d{5}$')], verbose_name='Code postal'),
        ),
        migrations.AlterField(
            model_name='centre',
            name='nom',
            field=models.CharField(max_length=255, unique=True, verbose_name='Nom du centre'),
        ),
        migrations.AlterField(
            model_name='document',
            name='nom_fichier',
            field=models.CharField(db_index=True, max_length=255, verbose_name='Nom du fichier'),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='description_autre',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="Description pour 'Autre' événement"),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='formation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to='rap_app.formation', verbose_name='Formation associée'),
        ),
        migrations.AlterField(
            model_name='evenement',
            name='type_evenement',
            field=models.CharField(choices=[('info_collective_presentiel', 'Information collective présentiel'), ('info_collective_distanciel', 'Information collective distanciel'), ('job_dating', 'Job dating'), ('evenement_emploi', 'Événement emploi'), ('forum', 'Forum'), ('jpo', 'Journée Portes Ouvertes (JPO)'), ('autre', 'Autre')], db_index=True, max_length=100, verbose_name="Type d'événement"),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='action',
            field=models.CharField(max_length=255, verbose_name='Action effectuée'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='ancien_statut',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Statut avant modification'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='annee',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name="Année de l'évolution"),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='details',
            field=models.JSONField(blank=True, null=True, verbose_name='Détails des modifications'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='formation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='historique_formations', to='rap_app.formation', verbose_name='Formation concernée'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='inscrits_total',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name="Nombre total d'inscrits"),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='mois',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Numéro du mois'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='nouveau_statut',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Statut après modification'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='semaine',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Numéro de la semaine'),
        ),
        migrations.AlterField(
            model_name='historiqueformation',
            name='utilisateur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historique_utilisateurs', to='rap_app.utilisateur', verbose_name='Utilisateur ayant effectué la modification'),
        ),
        migrations.AlterField(
            model_name='parametre',
            name='cle',
            field=models.CharField(max_length=100, unique=True, verbose_name='Clé du paramètre'),
        ),
        migrations.AlterField(
            model_name='parametre',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Description du paramètre'),
        ),
        migrations.AlterField(
            model_name='parametre',
            name='valeur',
            field=models.TextField(verbose_name='Valeur du paramètre'),
        ),
        migrations.AlterField(
            model_name='rapport',
            name='formation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rapports', to='rap_app.formation', verbose_name='Formation associée'),
        ),
        migrations.AlterField(
            model_name='ressource',
            name='formation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='rap_app.formation', verbose_name='Formation associée'),
        ),
        migrations.AlterField(
            model_name='ressource',
            name='nombre_candidats',
            field=models.PositiveIntegerField(default=0, verbose_name='Nombre de candidats'),
        ),
        migrations.AlterField(
            model_name='ressource',
            name='nombre_entretiens',
            field=models.PositiveIntegerField(default=0, verbose_name="Nombre d'entretiens"),
        ),
        migrations.AlterField(
            model_name='statut',
            name='couleur',
            field=models.CharField(blank=True, help_text='Couleur hexadécimale (ex: #FF5733)', max_length=7, verbose_name='Couleur'),
        ),
        migrations.AlterField(
            model_name='typeoffre',
            name='autre',
            field=models.CharField(blank=True, default=1, max_length=255, verbose_name='Autre (personnalisé)'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='utilisateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Les groupes auxquels appartient cet utilisateur.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.group', verbose_name='Groups'),
        ),
        migrations.AlterField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.permission', verbose_name='User Permissions'),
        ),
        migrations.AddIndex(
            model_name='centre',
            index=models.Index(fields=['code_postal'], name='rap_app_cen_code_po_c9960c_idx'),
        ),
        migrations.AddIndex(
            model_name='commentaire',
            index=models.Index(fields=['created_at'], name='rap_app_com_created_aad49b_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['nom_fichier'], name='rap_app_doc_nom_fic_b4d61d_idx'),
        ),
        migrations.AddIndex(
            model_name='evenement',
            index=models.Index(fields=['type_evenement'], name='rap_app_eve_type_ev_11d24c_idx'),
        ),
        migrations.AddIndex(
            model_name='ressource',
            index=models.Index(fields=['formation'], name='rap_app_res_formati_a59229_idx'),
        ),
        migrations.AddConstraint(
            model_name='typeoffre',
            constraint=models.UniqueConstraint(condition=models.Q(('autre__isnull', False), ('nom', 'autre')), fields=('autre',), name='unique_autre_non_null'),
        ),
        migrations.AddIndex(
            model_name='entreprise',
            index=models.Index(fields=['nom'], name='rap_app_ent_nom_4a472b_idx'),
        ),
        migrations.AddIndex(
            model_name='entreprise',
            index=models.Index(fields=['est_active'], name='rap_app_ent_est_act_c3aa9b_idx'),
        ),
        migrations.AddField(
            model_name='formation',
            name='entreprises',
            field=models.ManyToManyField(blank=True, related_name='formations', to='rap_app.entreprise', verbose_name='Entreprises associées'),
        ),
        migrations.AddField(
            model_name='ressource',
            name='entreprise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ressources', to='rap_app.entreprise', verbose_name='Entreprise associée'),
        ),
    ]
